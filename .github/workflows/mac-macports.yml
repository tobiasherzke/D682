name: Follow Compilation.md on Mac

on:
  push:
    branches: ['*']
    tags: 
  pull_request:
  release:
    types: ['created']

defaults:
  run:
    shell: bash
jobs:
  build:
    name: Compiling from source on macOS with MacPorts
    runs-on: macos-11
    env:
      JAVA_HOME: /Library/Java/JavaVirtualMachines/openjdk8/Contents/Home
    steps:
    - uses: actions/checkout@v2
    - name: Install macOS prerequisites via pkg installers or tarballs
      run: |
           wget https://github.com/jackaudio/jack2-releases/releases/download/v1.9.20/jack2-macOS-intel-v1.9.20.tar.gz
           tar xf jack2-macOS-intel-v1.9.20.tar.gz
           sudo installer -pkg $PWD/jack2-osx-1.9.20.pkg -target /
           rm -r jack2-macOS-intel-v1.9.20.tar.gz jack2-osx-1.9.20.pkg QjackCtl.app
           wget https://github.com/macports/macports-base/releases/download/v2.7.1/MacPorts-2.7.1-11-BigSur.pkg
           sudo installer -pkg $PWD/MacPorts-2.7.1-11-BigSur.pkg -target /
           rm MacPorts-2.7.1-11-BigSur.pkg
           wget https://github.com/sccn/liblsl/releases/download/v1.15.2/liblsl-1.15.2-OSX_amd64.tar.bz2
           sudo tar xf liblsl-1.15.2-OSX_amd64.tar.bz2 -C /usr/local
           rm liblsl-1.15.2-OSX_amd64.tar.bz2
    - name: Install macOS prerequisites via macports
      run: |
           uname -a
           echo "file://$PWD/.github/workflows/macports" | cat - /opt/local/etc/macports/sources.conf >/tmp/sources.conf
           sudo cp /tmp/sources.conf /opt/local/etc/macports/sources.conf
           sudo /opt/local/bin/port install db48 +java || true
           cat /opt/local/var/macports/logs/_Users_runner_work_D682_D682_.github_workflows_macports_databases_db48/db48/main.log
           false
           sudo /opt/local/bin/port install libsndfile pkgconfig portaudio liblo openjdk8 eigen3
    - name: Configure and build openMHA
      run: |
           ./configure
           make -j 3
    - name: Installation of self-compiled openMHA
      run: |
           make -j 3 install
           source bin/thismha.sh && mha '?' cmd=quit
    - name: unit-tests
      run: |
           sudo /opt/local/bin/port install boost
           make -j 4 unit-tests
    - name: system tests
      run: |
           sudo /opt/local/bin/port install octave +java octave-signal
           /opt/local/bin/octave --no-gui --no-window-system --eval "pkg list"
           /opt/local/bin/octave --no-gui --no-window-system --eval "pkg install -forge control signal"
           PATH="$PATH:/opt/local/bin" ./configure
           PATH="$PATH:/opt/local/bin" make -j 2 test
